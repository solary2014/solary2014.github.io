[{"title":"","date":"2017-03-01T02:25:02.408Z","path":"2017/03/01/Android RRO机制的运用-----google开机向导客制化/","text":"上周五的时候领导分了一个任务，客户让在google开机向导里面增加一页，首先就想到了android的Overlay，然后网上搜了下，发下有很多人写了这方面的技术。而且写的都还不错，所以本篇只当记录作用吧，列下写的比较好的博客： http://developer.sonymobile.com/2014/04/22/sony-contributes-runtime-resource-overlay-framework-to-android-code-example/ 看情况大家应该都参考的这篇，英文好的可以看下。 Android 运行时资源替换—-Runtime Resource Overlay 既然原理别人都已经写好了，再写就有点浪费时间了，不懂的话可以参考上面两篇博客。 下面直接开始我这个功能的实现。 首先看下我们的基本思路，（解释一点 其实google的开机向导很多页面都来自不同的app） 1、所以我们先要找到把每一页整合到一起的配置文件， 2、找到这个配置文件后在相应的地方增加我们的页面配置。 后面的事就是编写UI之类的 根据需求来就可以了 1、查找配置文件 通过反编译工具可以把SetupWizard的资源文件反编译出来，android的配置文件一般都是xml文件 。所以到现在我们应该已经得到了SetupWizard的配置文件，这个配置文件具体是什么。请往下看。 通过sdk提供的hierarchyviewer工具我们可以得到SetupWizard每个页面的包名 注意到BluOOBEKeepActivity 和BluOOBEActiviy就是我添加的，先忽略掉它们，设置wifi的时候老是跳过 ，下面这张图是走到设置wifi界面的时候截的。 通过上图我们可以知道SetupWizard会走到Setting中去选择连接wifi的界面，别的包名看起来都是google的，google的应用我们一般都没源码，所以就以Settings的这个界面入手，看Settings中AndroidManifest.xml关于WifiSetupActivity的配置 1234567891011121314&lt;activity android:name=&quot;.wifi.WifiSetupActivity&quot; android:taskAffinity=&quot;com.android.wizard&quot; android:theme=&quot;@style/SetupWizardDisableAppStartingTheme&quot; android:label=&quot;@string/wifi_setup_wizard_title&quot; android:icon=&quot;@drawable/empty_icon&quot; android:clearTaskOnLaunch=&quot;true&quot; android:windowSoftInputMode=&quot;adjustNothing&quot;&gt; &lt;intent-filter android:priority=&quot;1&quot;&gt; &lt;action android:name=&quot;com.android.net.wifi.SETUP_WIFI_NETWORK&quot; /&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt; &lt;/intent-filter&gt; &lt;meta-data android:name=&quot;com.android.settings.PRIMARY_PROFILE_CONTROLLED&quot; android:value=&quot;true&quot; /&gt; &lt;/activity&gt; 搜索这些信息发现SetupWizard的资源中并没有找到，很郁闷 ，没办法 唯一的思路不能断呀，只能一路查找它的父类 最后终于在WifiSettingsActivity 中找到了有用的信息 1&lt;action android:name=&quot;android.settings.WIFI_SETTINGS&quot; /&gt; 打开这两个文件查看，基本类似的，只是一个多了user，不知道具体有什么差别，但是通过对比发现 它们基本一样 只是wizard_script比wizard_script_user多了好多页面，但是明显第一个有welcome的页面，第二个没有，所以最终决定在wizard_script添加我们的页面。 123&lt;WizardAction wizard:uri=&quot;intent:#Intent;action=android.settings.SET_BLUOOBEKEEP;end&quot; id=&quot;blu_oobekeep&quot;&gt; &lt;result wizard:action=&quot;restore_check&quot; /&gt; &lt;/WizardAction&gt; 好了 经过比较蛋疼的查找后终于知道了要把新页面添加到什么地方， 接下来就是添加页面了。 2、最后也决定把这个页面写到Setting中，具体的内容的话就要看各个需求了。 Settings中AndroidManifest添加配置 12345678910&lt;activity android:name=&quot;com.android.settings.wifi.BluOOBEKeepActivity&quot; android:theme=&quot;@style/SetupWizardTheme.Light&quot; android:taskAffinity=&quot;com.android.wizard&quot;&gt; &lt;intent-filter&gt; &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt; &lt;action android:name=&quot;android.settings.SET_BLUOOBEKEEP&quot; /&gt; &lt;action android:name=&quot;android.settings.SET_BLUOOBE_NOT_ACCOUNTKEEP&quot; /&gt; &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt; &lt;/intent-filter&gt; &lt;/activity&gt; 源码","tags":[]},{"title":"Hello World","date":"2017-02-28T07:09:17.626Z","path":"2017/02/28/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]